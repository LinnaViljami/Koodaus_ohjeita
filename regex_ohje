^ = rivin alku
{2-5} = 2-5 merkkiä pitkä
$ = rivin loppu
[0-9a-z_-] = sisältää numeroita tai kirjaimia tai alleviivoja tai viivoja
. = mikä tahansa merkki paitsi ei rivinvaihto
[^] = mikä tahansa merkki paitsi ei sulkeiden sisälle määritellyt
[a-z]* = sisältää 0 tai enemmän kirjaimia
[1-5]+ = sisältää 1 tai enemmän numeroita 1-5
a{1,3} = sisältää 1-3 'a' kirjainta
(xyz) = sisältää x y ja z kirjaimet määritellyssä järjestyksessä
a|c = Sisältää kirjaimen a tai c
\[ = tulkitsee hakasulkeen merkkinä eikä regex symbolina
[T]? = voi sisältää kirjaimen T, ei pakko

\w = [a-zA-Z0-9_] = sisältää numeroita tai kirjaimia
\W = [^\w] = ei sisällä numeroita tai kirjaimia
\d = [0-9] = sisältää numeroita
\D = ei sisällä numeroita
\s = sisältää välilyönnin
\S = ei sisällä välilyöntiä

(?=3)[2] = numero kaksi jonka jälkeen on 3 
(?<=\$)[0–9\.]* = 0 tai enemmän numeroita 0-9 tai pisteen sisältäviä
merkkijonoja joiden edessä on '$' merkki
(?!9)[6] = numero 6 mutta ei jos numero 9 numeron 6 jälkeen
(?<!6)[9] = numero 9 mutta ei jos numero 6 ennen numeroa 9

i = Isot ja pienet kirjaimet katsotaan samaksi
Esimerkki: /Esa/i = Esa tai esa

g = Etsi koko riviltä
Esimerkki: Esa oli Esa, ilman g lippua /Esa/i löytää vaan ensimmäisen
sanan kun taas /Esa/gi löytää molemmat.

m = Etsii monelta riviltä

Regex(=regular expressions) on kieli, jolla voi määritellä erilaisten
merkkijonojen formaatteja. Esimerkiksi, mikäli haluat poistaa kaikki 
kansiossa olevat '.mp3' tiedostot, voit poistaa ne määrittelemällä
regexin avulla "poista .*mp3$", sen sijaan että joutuisit luettelemaan
jokaisen mp3 tiedoston nimen. Linuxin komentorivillä edellä mainittu
onnistuisi komennolla "rm .*mp3$".
